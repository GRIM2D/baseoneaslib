<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication showStatusBar="false"
	windowDeactivate="{
		storeSettings();
	}"
	xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init()" layout="absolute" xmlns:local="*">
	<mx:Script>
		<![CDATA[
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.graphics.codec.PNGEncoder;
			import mx.controls.Button;
			import mx.utils.SHA256;
			import mx.effects.easing.Back;
			
			private var so:SharedObject = SharedObject.getLocal("com.baseoneonline.Calibrator");
			
		
			private function init():void {
				restoreSettings();
				statusBar.visible = false;
				statusBar.includeInLayout = false;
				
				addEventListener(Event.ADDED_TO_STAGE, function(e:Event):void {
					stage.addEventListener(KeyboardEvent.KEY_DOWN, onKey);
				});
				
				
				
				
			}
			
			private function restoreSettings():void {
				backgroundColor = so.data.backgroundColor;
				colorPickerBG.selectedColor = backgroundColor;
				newMarkerColor = so.data.markerColor;
				colorPickerMarker.selectedColor = newMarkerColor;
			}
			
			private function storeSettings():void {
				so.clear();
				so.data.markerColor = newMarkerColor;
				so.data.backgroundColor = backgroundColor;
				so.flush();
			}
			
			
			private function onKey(e:KeyboardEvent):void {
				switch (e.keyCode) {
					case Keyboard.TAB:
						toggleSettingsPanel();
						break;
					case Keyboard.F:
						toggleFullscreen();
						break;
					default:
						
				}
			}
			
			
			
			
			[Bindable]
			private function set backgroundColor(c:uint):void {
				setStyle("backgroundColor", c);
			}
			private function get backgroundColor():uint {
				return getStyle("backgroundColor");
			}
			
			[Bindable]
			private function set newMarkerColor(c:uint):void {
				markers.newMarkerColor = c;
			}
			private function get newMarkerColor():uint {
				return markers.newMarkerColor;
			}
			
			private function toggleSettingsPanel():void {
				settingsPanel.visible = !settingsPanel.visible;
				markers.enabled = !settingsPanel.visible;
				if (settingsPanel.visible) {
					Mouse.show();
				} else {
					Mouse.hide();
				}
			}
			
			private function toggleFullscreen():void {
				if (stage.displayState == StageDisplayState.FULL_SCREEN_INTERACTIVE) {
					stage.displayState = StageDisplayState.NORMAL;
				} else {
					stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;
				}
			}
			
			private function saveBitmap():void {
				var enc:PNGEncoder = new PNGEncoder();
				var bytes:ByteArray = enc.encode(markers.getBitmap());
				var fs:FileStream = new FileStream();
				
				var file:File = new File();
				file.addEventListener(Event.SELECT, function(e:Event):void {
					fs.open(file, FileMode.WRITE);
					fs.writeBytes(bytes);
					fs.close();
					Alert.show(file.url, "File Saved!", Alert.OK);
				});
				file.browseForSave("Where to store PNG?");
				
				
			}

			
			
		]]>
	</mx:Script>
	
	
	
	<local:Corner width="100%" height="100%" visible="{cbCornersVisible.selected}" />
	<local:Markers id="markers" width="100%" height="100%" />
	<mx:Panel id="settingsPanel" x="10" y="10" width="288" height="362" layout="absolute" title="Settings">
		<mx:ColorPicker y="6" right="10" id="colorPickerBG" 
			change="{
				backgroundColor = event.color;
			}"
		/>
		<mx:Label x="10" y="10" text="Background Color"/>
		<mx:Label x="10" y="36" text="Marker Color"/>
		<mx:ColorPicker id="colorPickerMarker" x="236" y="32" 
			change="{
				newMarkerColor = event.color
			}"
		/>
		<mx:Button x="10" y="290" label="Save Image..." click="{
			saveBitmap();
		}"/>
		<mx:CheckBox id="cbCornersVisible" x="244" y="62" selected="true"/>
		<mx:Label x="10" y="62" text="Show Corners"/>
		<mx:Button x="10" y="212" label="Clear Markers..." 
			click="{
				Alert.show('Really clear?', 'Clear Markers', Alert.NO|Alert.YES, null, 
				function(e:CloseEvent):void {
					if (e.detail == Alert.YES) {
						markers.clear();
					}
				});
					
			}"/>
	</mx:Panel>
</mx:WindowedApplication>
